#Map and Lambda Function
cube = lambda x: pow(x,3)


def fibonacci(n):
    
    lis = [0,1]
    
    
    for i in range(2,n):
        lis.append(lis[i-2] + lis[i-1])
    return(lis[0:n])

if __name__ == '__main__':
    n = int(input())
    print(list(map(cube, fibonacci(n))))
   
   
       #List Comprehensions
if __name__ == '__main__':
    x = int(input())
    y = int(input())
    z = int(input())
    n = int(input())
    l = []
    for i in range(x+1):
        for j in range(y+1):
            for k in range(z+1):
                if i+j+k == n:
                    continue
                l.append([i,j,k])                
    print(l)
      
     
